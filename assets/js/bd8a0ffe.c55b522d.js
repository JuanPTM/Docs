"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4497],{36910:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var s=t(74848),a=t(28453);const i={title:"SCS Entropy: Implementation and Testing Notes",type:"Supplement",track:"IaaS",status:"Proposal",supplements:["scs-0101-v1-entropy.md"]},r=void 0,o={id:"scs-0101-w1-entropy-implementation-testing",title:"SCS Entropy: Implementation and Testing Notes",description:"Implementation",source:"@site/standards/scs-0101-w1-entropy-implementation-testing.md",sourceDirName:".",slug:"/scs-0101-w1-entropy-implementation-testing",permalink:"/standards/scs-0101-w1-entropy-implementation-testing",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"SCS Entropy: Implementation and Testing Notes",type:"Supplement",track:"IaaS",status:"Proposal",supplements:["scs-0101-v1-entropy.md"]},sidebar:"standards",previous:{title:"SCS Entropy",permalink:"/standards/scs-0101-v1-entropy"},next:{title:"scs-0102: SCS Image Metadata Standard",permalink:"/standards/iaas/scs-0102"}},l={},d=[{value:"Implementation",id:"implementation",level:2},{value:"Automated Tests",id:"automated-tests",level:2},{value:"Images Sample",id:"images-sample",level:3},{value:"Errors",id:"errors",level:3},{value:"Warnings",id:"warnings",level:3},{value:"Implementation",id:"implementation-1",level:3},{value:"Manual Tests",id:"manual-tests",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"implementation",children:"Implementation"}),"\n",(0,s.jsx)(n.p,{children:"We presume that almost nothing has to be done (or indeed can be done), as\nlong as the CPUs and VM images are reasonably recent; only the flavor and\nimage attributes have to be set:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["flavor: ",(0,s.jsx)(n.code,{children:"hw_rng:allowed=True"})," ,"]}),"\n",(0,s.jsxs)(n.li,{children:["image: ",(0,s.jsx)(n.code,{children:"hw_rng_model: virtio"})," ."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"automated-tests",children:"Automated Tests"}),"\n",(0,s.jsx)(n.h3,{id:"images-sample",children:"Images Sample"}),"\n",(0,s.jsx)(n.p,{children:"Some checks need to be performed on a live instance. For these checks, it is\nnecessary to choose a sample of VM images to test on."}),"\n",(0,s.jsx)(n.p,{children:"For the time being, the sample MUST contain at least one public image reported\nby OpenStack. This may be extended in the future."}),"\n",(0,s.jsx)(n.h3,{id:"errors",children:"Errors"}),"\n",(0,s.jsx)(n.p,{children:"For every image in the chosen sample, the following items MUST be detected and\nreported as an error:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["the service ",(0,s.jsx)(n.code,{children:"rngd"})," is not running,"]}),"\n",(0,s.jsxs)(n.li,{children:["the special file ",(0,s.jsx)(n.code,{children:"/proc/sys/kernel/random/entropy_avail"})," does not contain\nthe value 256 (pinned since kernel 5.18),"]}),"\n",(0,s.jsxs)(n.li,{children:["the number of FIPS 140-2 failures exceeds 3 out of 1000 blocks\ntested, as determined by ",(0,s.jsx)(n.code,{children:"cat /dev/random | rngtest -c 1000"})," ."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Note: The latter two items act as surrogates for the following item, which\ncannot be detected directly:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"CPU instructions for accessing entropy are not available to the VMs."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"warnings",children:"Warnings"}),"\n",(0,s.jsx)(n.p,{children:"The following items MUST be detected and reported as a warning:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["any flavor missing the attribute ",(0,s.jsx)(n.code,{children:"hw_rng:allowed=True"}),","]}),"\n",(0,s.jsxs)(n.li,{children:["any image missing the attribute ",(0,s.jsx)(n.code,{children:"hw_rng_model: virtio"}),","]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Note that the requirement regarding the kernel patch level will not be\nchecked, because of two reasons: (a) we already check the file ",(0,s.jsx)(n.code,{children:"entropy_avail"}),"\n(see subsection on Errors), and (b) users can always choose a recent image,\nas ensured by the image metadata standard."]}),"\n",(0,s.jsx)(n.h3,{id:"implementation-1",children:"Implementation"}),"\n",(0,s.jsxs)(n.p,{children:["The script ",(0,s.jsx)(n.a,{href:"https://github.com/SovereignCloudStack/standards/blob/main/Tests/iaas/entropy/entropy-check.py",children:(0,s.jsx)(n.code,{children:"entropy-check.py"})}),"\nconnects to OpenStack and performs the checks described in this section."]}),"\n",(0,s.jsx)(n.h2,{id:"manual-tests",children:"Manual Tests"}),"\n",(0,s.jsx)(n.p,{children:"None."})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var s=t(96540);const a={},i=s.createContext(a);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);