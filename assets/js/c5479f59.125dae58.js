"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2283],{34985:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var i=t(74848),r=t(28453);const o={},s="Rate limit",a={id:"container/components/container-registry/docs/rate_limit",title:"Rate limit",description:"This page describes how the rate limiting can be set up for the Harbor container registry.",source:"@site/docs/03-container/components/container-registry/docs/rate_limit.md",sourceDirName:"03-container/components/container-registry/docs",slug:"/container/components/container-registry/docs/rate_limit",permalink:"/docs/container/components/container-registry/docs/rate_limit",draft:!1,unlisted:!1,editUrl:"https://github.com/SovereignCloudStack/docs/tree/main/docs/03-container/components/container-registry/docs/rate_limit.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"SCS deployment",permalink:"/docs/container/components/container-registry/docs/scs-deployment"},next:{title:"Upgrade",permalink:"/docs/container/components/container-registry/docs/upgrade"}},c={},l=[];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"rate-limit",children:"Rate limit"}),"\n",(0,i.jsx)(n.p,{children:"This page describes how the rate limiting can be set up for the Harbor container registry."}),"\n",(0,i.jsxs)(n.p,{children:["Harbor itself doesn't support rate limit protection yet, see open ",(0,i.jsx)(n.a,{href:"https://github.com/goharbor/harbor/issues/3419",children:"issue"}),".\nTherefore, we can take advantage of the ingress controller in front of the Harbor. In our case Nginx."]}),"\n",(0,i.jsxs)(n.p,{children:["In the ingress-nginx controller, the rate-limiting options can be specified via ",(0,i.jsx)(n.a,{href:"https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/#rate-limiting",children:"annotations"}),".\nE.g. ",(0,i.jsx)(n.code,{children:'nginx.ingress.kubernetes.io/limit-rps: "1"'})," means that ingress will allow only 1 request from a given IP per second.\nClient IP is set based on the use of ",(0,i.jsx)(n.code,{children:"PROXY protocol"})," or from the ",(0,i.jsx)(n.code,{children:"X-Forwarded-For"})," header value.\nIn the SCS reference implementation, proxy protocol for ingress nginx is ",(0,i.jsx)(n.a,{href:"https://github.com/SovereignCloudStack/k8s-cluster-api-provider/blob/main/Release-Notes-R4.md#enabling-the-proxy-protocol-for-nginx-ingress-and-preliminary-support-for-ovn-lb-325",children:"enabled by default"}),".\nThis rate-limit annotation is ideal for ",(0,i.jsx)(n.em,{children:"DDoS attacks"})," mitigation. When clients exceed this limit\n",(0,i.jsx)(n.strong,{children:"503"})," status code is returned. This status code can be changed via nginx ingress controller configmap:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'$ kubectl edit cm -n ingress-nginx ingress-nginx-controller\n#  data:\n#    limit-req-status-code: "429"\n'})}),"\n",(0,i.jsxs)(n.p,{children:["There are other useful annotations, such as limit concurrent connections, number of kilobytes per second or limit burst requests.\nE.g. bursts can be configured via ",(0,i.jsx)(n.code,{children:"nginx.ingress.kubernetes.io/limit-burst-multiplier"}),", which is by default ",(0,i.jsx)(n.em,{children:"5"}),".\nIt means that ",(0,i.jsx)(n.a,{href:"http://nginx.org/en/docs/http/ngx_http_limit_req_module.html#limit_req",children:"burst"}),"\nwill be set in this case to ",(0,i.jsx)(n.code,{children:"limit-rps * limit-burst-multiplier = 1 * 5 = 5"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["More information about nginx rate-limiting and real-world examples can be seen in this nginx ",(0,i.jsx)(n.a,{href:"https://www.nginx.com/blog/rate-limiting-nginx/",children:"blog"}),".\nAlso, there is a second option for how the rate limiting can be configured called ",(0,i.jsx)(n.a,{href:"https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/#global-rate-limiting",children:"global rate limiting"}),".\nDetailed research and comparison are done in this ",(0,i.jsx)(n.a,{href:"https://github.com/SovereignCloudStack/k8s-harbor/issues/38#issuecomment-1570181044",children:"issue"}),".\nFurthermore, see this ",(0,i.jsx)(n.a,{href:"https://github.com/SovereignCloudStack/k8s-harbor/pull/42",children:"PR"}),",\nwhich adds a rate limit for the public(registry.scs.community) environment."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var i=t(96540);const r={},o=i.createContext(r);function s(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);