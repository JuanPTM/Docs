"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2544],{14886:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var t=i(74848),r=i(28453);const o={},l="Linting Guide",s={id:"contribute/linting-guide",title:"Linting Guide",description:"In order to have a clean content repository regarding all markdown files we enforce linting on:",source:"@site/community/contribute/linting-guide.md",sourceDirName:"contribute",slug:"/contribute/linting-guide",permalink:"/community/contribute/linting-guide",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"community",previous:{title:"Documentation workflow explanation",permalink:"/community/contribute/docs-workflow-explanation"},next:{title:"Installation",permalink:"/community/contribute/local-docusaurus-development-guide"}},c={},d=[{value:"Pre Commit",id:"pre-commit",level:2},{value:"Github Workflows",id:"github-workflows",level:2}];function a(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",...(0,r.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"linting-guide",children:"Linting Guide"}),"\n",(0,t.jsx)(e.p,{children:"In order to have a clean content repository regarding all markdown files we enforce linting on:"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:"all staged files prior committing"}),"\n",(0,t.jsx)(e.li,{children:"all Pull Requests"}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"pre-commit",children:"Pre Commit"}),"\n",(0,t.jsx)(e.p,{children:"Run markdownlint against staged git files with Husky git hook:"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"https://github.com/okonet/lint-staged",children:"lint-staged"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"https://github.com/typicode/husky",children:"husky"})}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:"The rules are enforced on markdown files, for which we use:"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.a,{href:"https://github.com/DavidAnson/markdownlint-cli2",children:"markdownlint-cli2"})," for markdownlint"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.a,{href:"https://github.com/prettier/prettier",children:"prettier"})," for code formatting"]}),"\n"]}),"\n",(0,t.jsxs)(e.p,{children:["The markdownlint rules are defined in the configuration file ",(0,t.jsx)(e.code,{children:".markdownlint-cli2.jsonc"})]}),"\n",(0,t.jsxs)(e.p,{children:["Additionally we use ",(0,t.jsx)(e.a,{href:"https://github.com/OnkarRuikar/markdownlint-rule-search-replace",children:"markdownlint-rule-search-replace"})," for fixing"]}),"\n",(0,t.jsx)(e.h2,{id:"github-workflows",children:"Github Workflows"}),"\n",(0,t.jsxs)(e.p,{children:["There are two actions running on every Pull Request on the ",(0,t.jsx)(e.code,{children:"main"})," branch."]}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"link-validator.yml"}),"is checking every link in markdown files."]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"pr-markdownlint.yml"}),"is checking all markdown files regarding to the rules defined within ",(0,t.jsx)(e.code,{children:".markdownlint-cli2.jsonc"})]}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(a,{...n})}):a(n)}},28453:(n,e,i)=>{i.d(e,{R:()=>l,x:()=>s});var t=i(96540);const r={},o=t.createContext(r);function l(n){const e=t.useContext(o);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:l(n.components),t.createElement(o.Provider,{value:e},n.children)}}}]);