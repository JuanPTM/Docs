"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5564],{82592:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>i});var t=s(74848),r=s(28453);const a={},o="Migration to KaaS v2",c={id:"container/components/k8s-cluster-api-provider/doc/usage/migrate-to-kaas-v2",title:"Migration to KaaS v2",description:"From R6, k8s-cluster-api-provider repository (SCS KaaS reference implementation v1) is deprecated",source:"@site/docs/03-container/components/k8s-cluster-api-provider/doc/usage/migrate-to-kaas-v2.md",sourceDirName:"03-container/components/k8s-cluster-api-provider/doc/usage",slug:"/container/components/k8s-cluster-api-provider/doc/usage/migrate-to-kaas-v2",permalink:"/docs/container/components/k8s-cluster-api-provider/doc/usage/migrate-to-kaas-v2",draft:!1,unlisted:!1,editUrl:"https://github.com/SovereignCloudStack/docs/tree/main/docs/03-container/components/k8s-cluster-api-provider/doc/usage/migrate-to-kaas-v2.md",tags:[],version:"current",frontMatter:{}},l={},i=[{value:"Migration",id:"migration",level:2},{value:"Steps",id:"steps",level:3}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"migration-to-kaas-v2",children:"Migration to KaaS v2"}),"\n",(0,t.jsx)(n.p,{children:"From R6, k8s-cluster-api-provider repository (SCS KaaS reference implementation v1) is deprecated\nand should not be used for new deployments. We intend to remove it with the next release (R7)."}),"\n",(0,t.jsxs)(n.p,{children:["Therefore, it is recommended to migrate to ",(0,t.jsx)(n.a,{href:"https://github.com/SovereignCloudStack/cluster-stacks",children:"Cluster Stacks"})," - SCS\nKaaS reference implementation v2. For list of known issues and in restrictions KaaS v2 see ",(0,t.jsx)(n.a,{href:"https://github.com/SovereignCloudStack/release-notes/blob/main/Release6.md#kaas-2",children:"SCS R6 Release Notes"}),".\nWe will try to address most of the gaps during the next release cycle (R7)."]}),"\n",(0,t.jsx)(n.h2,{id:"migration",children:"Migration"}),"\n",(0,t.jsxs)(n.p,{children:["In R6, we migrated to ",(0,t.jsx)(n.a,{href:"https://github.com/SovereignCloudStack/k8s-cluster-api-provider/blob/main/Release-Notes-R6.md#clusterclass",children:"ClusterClass"}),"\nfeature to ease the migration to KaaS v2, because Cluster Classes are the main component there. So this guide will work\nonly on release >= R6 (use upgrade ",(0,t.jsx)(n.a,{href:"https://github.com/SovereignCloudStack/k8s-cluster-api-provider/blob/main/doc/Upgrade-Guide.md",children:"guide"}),"\nfirst, when you are on release < R6)."]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["Warning: This guide supports only ",(0,t.jsx)(n.code,{children:"cilium"})," CNI (the only CNI Cluster Addon in KaaS v2)"]}),"\n"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["Warning: After the migration, ",(0,t.jsx)(n.code,{children:"create_cluster.sh"})," and other KaaS v1 scripts and features should not be used anymore"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"steps",children:"Steps"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Deploy KaaS v1, e.g.:","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-terraform",children:'cloud_provider    = "gx-scs"\navailability_zone = "nova"\ncontroller_flavor = "SCS-2V-4"\nworker_flavor     = "SCS-2V-4"\ndns_nameservers   = ["62.138.222.111", "62.138.222.222"]\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Deploy ",(0,t.jsx)(n.a,{href:"https://github.com/SovereignCloudStack/cluster-stack-operator/",children:"CSO"})," and ",(0,t.jsx)(n.a,{href:"https://github.com/SovereignCloudStack/cluster-stack-provider-openstack",children:"CSPO"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["deploy with make (access token optional and recommended)","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"make deploy-cso GIT_ACCESS_TOKEN=<github-access-token>\nmake deploy-cspo GIT_ACCESS_TOKEN=<github-access-token>\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Export ",(0,t.jsx)(n.code,{children:"${PREFIX}"})," and ",(0,t.jsx)(n.code,{children:"${CLUSTER_NAME}"}),":","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:". ~/bin/cccfg.inc\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Patch secret with ",(0,t.jsx)(n.code,{children:"cloudName"}),":","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'kubectl patch secret -n ${CLUSTER_NAME} ${CLUSTER_NAME}-cloud-config -p \'{"stringData":{"cloudName":"\'"${PREFIX}-${CLUSTER_NAME}"\'"}}\'\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Create Cluster Stack:","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'kubectl -n ${CLUSTER_NAME} apply -f - <<EOF\napiVersion: clusterstack.x-k8s.io/v1alpha1\nkind: ClusterStack\nmetadata:\n  name: scs\nspec:\n  provider: openstack\n  name: scs\n  kubernetesVersion: "1.28"\n  channel: stable\n  autoSubscribe: false\n  providerRef:\n    apiVersion: infrastructure.clusterstack.x-k8s.io/v1alpha1\n    kind: OpenStackClusterStackReleaseTemplate\n    name: cspotemplate\n  versions:\n  - v1\n---\napiVersion: infrastructure.clusterstack.x-k8s.io/v1alpha1\nkind: OpenStackClusterStackReleaseTemplate\nmetadata:\n  name: cspotemplate\nspec:\n  template:\n    spec:\n      identityRef:\n        kind: Secret\n        name: ${CLUSTER_NAME}-cloud-config\nEOF\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"$ kubectl -n ${CLUSTER_NAME} get clusterstack\nNAME   PROVIDER    CLUSTERSTACK   K8S    CHANNEL   AUTOSUBSCRIBE   USABLE   LATEST                            AGE   REASON   MESSAGE\nscs    openstack   scs            1.28   stable    false           v1       openstack-scs-1-28-v1 | v1.28.7   15m\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Migrate Cluster to KaaS v2:","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'cat << "EOF" | clusterctl generate yaml --config ~/${CLUSTER_NAME}/clusterctl.yaml | kubectl -n ${CLUSTER_NAME} apply -f -\napiVersion: cluster.x-k8s.io/v1beta1\nkind: Cluster\nmetadata:\n  name: ${CLUSTER_NAME}\nspec:\n  clusterNetwork:\n    pods:\n      cidrBlocks: ["${POD_CIDR}"]\n    services:\n      cidrBlocks: ["${SERVICE_CIDR}"]\n    serviceDomain: "cluster.local"\n  topology:\n    variables:\n    - name: dns_nameservers\n      value: ${OPENSTACK_DNS_NAMESERVERS}\n    - name: controller_flavor\n      value: ${OPENSTACK_CONTROL_PLANE_MACHINE_FLAVOR}\n    - name: worker_flavor\n      value: ${OPENSTACK_NODE_MACHINE_FLAVOR}\n    - name: controller_root_disk\n      value: ${CONTROL_PLANE_ROOT_DISKSIZE}\n    - name: worker_root_disk\n      value: ${WORKER_ROOT_DISKSIZE}\n    - name: external_id\n      value: ${OPENSTACK_EXTERNAL_NETWORK_ID}\n    - name: node_cidr\n      value: ${NODE_CIDR}\n    - name: openstack_security_groups\n      value: [${PREFIX}-allow-ssh, ${PREFIX}-allow-icmp, ${PREFIX}-${CLUSTER_NAME}-cilium]\n    - name: cloud_name\n      value: ${OPENSTACK_CLOUD}\n    - name: secret_name\n      value: ${CLUSTER_NAME}-cloud-config\n    - name: controller_server_group_id\n      value: ${OPENSTACK_SRVGRP_CONTROLLER}\n    - name: worker_server_group_id\n      value: ${OPENSTACK_SRVGRP_WORKER}\n    - name: ssh_key\n      value: ${OPENSTACK_SSH_KEY_NAME}\n    class: openstack-scs-1-28-v1\n    version: ${KUBERNETES_VERSION}\n    controlPlane:\n      replicas: ${CONTROL_PLANE_MACHINE_COUNT}\n    workers:\n      machineDeployments:\n      - class: openstack-scs-1-28-v1-md-0-no1\n        name: "${PREFIX}-${CLUSTER_NAME}-md-0-no1"\n        replicas: ${WORKER_MACHINE_COUNT}\n        failureDomain: ${OPENSTACK_FAILURE_DOMAIN}\nEOF\n'})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["Note: If you are using flavors with a disk, comment ",(0,t.jsx)(n.code,{children:"controller_root_disk"})," and ",(0,t.jsx)(n.code,{children:"worker_root_disk"})," variables"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Fix metrics-server Cluster Addon:","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'$ kubectl -n ${CLUSTER_NAME} get clusteraddon\nNAME                        CLUSTER       READY   AGE   REASON                 MESSAGE\ncluster-addon-testcluster   testcluster   false   20m   FailedToApplyObjects   failed to successfully apply everything\n$ KUBECONFIG=~/${CLUSTER_NAME}/${CLUSTER_NAME}.yaml kubectl delete deployment -n kube-system metrics-server\ndeployment.apps "metrics-server" deleted\n$ kubectl -n ${CLUSTER_NAME} get clusteraddon\nNAME                        CLUSTER       READY   AGE   REASON   MESSAGE\ncluster-addon-testcluster   testcluster   true    25m\n'})}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var t=s(96540);const r={},a=t.createContext(r);function o(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);