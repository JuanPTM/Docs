"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2932],{89027:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>a});var t=s(74848),i=s(28453);const r={},o="Continuous integration",c={id:"container/components/k8s-cluster-api-provider/doc/continuous-integration",title:"Continuous integration",description:"Project k8s-cluster-api-provider uses SCS Zuul CI platform to",source:"@site/docs/03-container/components/k8s-cluster-api-provider/doc/continuous-integration.md",sourceDirName:"03-container/components/k8s-cluster-api-provider/doc",slug:"/container/components/k8s-cluster-api-provider/doc/continuous-integration",permalink:"/docs/container/components/k8s-cluster-api-provider/doc/continuous-integration",draft:!1,unlisted:!1,editUrl:"https://github.com/SovereignCloudStack/docs/tree/main/docs/03-container/components/k8s-cluster-api-provider/doc/continuous-integration.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"SCS k8s-cluster-api-provider upgrade guide",permalink:"/docs/container/components/k8s-cluster-api-provider/doc/Upgrade-Guide"},next:{title:"Roadmap",permalink:"/docs/container/components/k8s-cluster-api-provider/doc/roadmap"}},l={},a=[{value:"Configuration",id:"configuration",level:2},{value:"Pipelines",id:"pipelines",level:2},{value:"Jobs",id:"jobs",level:2},{value:"Secrets",id:"secrets",level:3},{value:"Job customization",id:"job-customization",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"continuous-integration",children:"Continuous integration"}),"\n",(0,t.jsxs)(n.p,{children:["Project k8s-cluster-api-provider uses ",(0,t.jsx)(n.a,{href:"https://zuul.scs.community",children:"SCS Zuul"})," CI platform to\ndrive its continuous integration tests. The project is registered under the ",(0,t.jsx)(n.a,{href:"https://zuul.scs.community/t/SCS/projects",children:"SCS tenant"}),"\nand therefore is able to use a set of pre-defined pipelines, jobs, and ansible roles that\nSCS Zuul instance defines and imports. If you want to explore currently available SCS pipelines,\nvisit the ",(0,t.jsx)(n.a,{href:"https://github.com/SovereignCloudStack/zuul-config",children:"SCS zuul-config"})," project.\nIf you want to see the full list of jobs that are available, visit the ",(0,t.jsx)(n.a,{href:"https://zuul.scs.community/t/SCS/jobs",children:"SCS Zuul UI"}),".\nAnd if you are looking for some handy ansible role that SCS Zuul imports, visit they ",(0,t.jsx)(n.a,{href:"https://opendev.org/zuul/zuul-jobs/src/branch/master/roles",children:"source"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Refer to SCS ",(0,t.jsx)(n.a,{href:"https://github.com/SovereignCloudStack/docs/pull/54",children:"Zuul users guide"})," and/or\n",(0,t.jsx)(n.a,{href:"https://zuul-ci.org/docs/",children:"Zuul docs"})," for further details on how to define and use Zuul\nCI/CD pipelines and jobs."]}),"\n",(0,t.jsxs)(n.p,{children:["Note (for geeks): If you are interested in Zuul CI platform and want to deploy your own development instance of it,\nthen read the official ",(0,t.jsx)(n.a,{href:"https://zuul-ci.org/docs/zuul/latest/tutorials/quick-start.html",children:"quick-start"})," manual\nor visit ",(0,t.jsx)(n.a,{href:"https://github.com/matofederorg/zuul-config",children:"this"})," tutorial which aims a connection\nof Zuul CI platform with a GitHub organization."]}),"\n",(0,t.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsxs)(n.p,{children:["SCS Zuul automatically recognizes ",(0,t.jsx)(n.code,{children:".zuul.yaml"})," configuration file that is located in the\nk8s-cluster-api-provider's root. This file informs Zuul about the project's ",(0,t.jsx)(n.a,{href:"https://zuul-ci.org/docs/zuul/latest/config/project.html#attr-project.default-branch",children:"default-branch"})," and\npreferred ",(0,t.jsx)(n.a,{href:"https://zuul-ci.org/docs/zuul/latest/config/project.html#attr-project.merge-mode",children:"merge-mode"}),".\nIt also references ",(0,t.jsx)(n.a,{href:"https://github.com/matofederorg/zuul-config",children:"SCS Zuul pipelines"})," and\ntheir jobs used by the k8s-cluster-api-provider project. Then, jobs link Ansible playbooks that contain\ntasks for actual CI testing."]}),"\n",(0,t.jsx)(n.p,{children:"See relevant CI configuration files:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\u251c\u2500\u2500 .zuul.yaml\n\u251c\u2500\u2500 playbooks\n\u2502   \u251c\u2500\u2500 cleanup.yaml\n\u2502   \u251c\u2500\u2500 dependencies.yaml\n\u2502   \u251c\u2500\u2500 e2e.yaml\n\u2502   \u251c\u2500\u2500 templates\n\u2502   \u2502   \u2514\u2500\u2500 environment.tfvars.j2\n"})}),"\n",(0,t.jsx)(n.h2,{id:"pipelines",children:"Pipelines"}),"\n",(0,t.jsxs)(n.p,{children:["This section describes an ",(0,t.jsx)(n.a,{href:"https://github.com/SovereignCloudStack/zuul-config/blob/main/zuul.d/gh_pipelines.yaml",children:"SCS Zuul pipelines"})," that are used by the k8s-cluster-api-provider project."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"e2e-test"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["It is triggered by the ",(0,t.jsx)(n.code,{children:"e2e-test"})," label in the opened PR"]}),"\n",(0,t.jsxs)(n.li,{children:["It executes ",(0,t.jsx)(n.code,{children:"k8s-cluster-api-provider-e2e-conformance"})," job"]}),"\n",(0,t.jsxs)(n.li,{children:["It applies the PR label ",(0,t.jsx)(n.code,{children:"successful-e2e-test"})," and leaves an informative PR comment when the ",(0,t.jsx)(n.code,{children:"k8s-cluster-api-provider-e2e-conformance"})," job succeeded"]}),"\n",(0,t.jsxs)(n.li,{children:["It applies the PR label ",(0,t.jsx)(n.code,{children:"failed-e2e-test"})," and leaves an informative PR comment when the ",(0,t.jsx)(n.code,{children:"k8s-cluster-api-provider-e2e-conformance"})," job failed"]}),"\n",(0,t.jsxs)(n.li,{children:["It applies the PR label ",(0,t.jsx)(n.code,{children:"cancelled-e2e-test"})," and leaves an informative PR comment when the ",(0,t.jsx)(n.code,{children:"k8s-cluster-api-provider-e2e-conformance"})," job is canceled"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"unlabel-on-update-e2e-test"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["It is triggered by the PR update only when PR contains the ",(0,t.jsx)(n.code,{children:"successful-e2e-test"})," label"]}),"\n",(0,t.jsx)(n.li,{children:"It ensures that any PR update invalidates a previous successful e2e test"}),"\n",(0,t.jsxs)(n.li,{children:["It removes ",(0,t.jsx)(n.code,{children:"successful-e2e-test"})," label from the PR"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"e2e-quick-test"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["It is triggered by the ",(0,t.jsx)(n.code,{children:"e2e-quick-test"})," label in the opened PR"]}),"\n",(0,t.jsxs)(n.li,{children:["It executes ",(0,t.jsx)(n.code,{children:"k8s-cluster-api-provider-e2e-quick"})," job"]}),"\n",(0,t.jsxs)(n.li,{children:["It applies the PR label ",(0,t.jsx)(n.code,{children:"successful-e2e-quick-test"})," and leaves an informative PR comment when the ",(0,t.jsx)(n.code,{children:"k8s-cluster-api-provider-e2e-quick"})," job succeeded"]}),"\n",(0,t.jsxs)(n.li,{children:["It applies the PR label ",(0,t.jsx)(n.code,{children:"failed-e2e-quick-test"})," and leaves an informative PR comment when the ",(0,t.jsx)(n.code,{children:"k8s-cluster-api-provider-e2e-quick"})," job failed"]}),"\n",(0,t.jsxs)(n.li,{children:["It applies the PR label ",(0,t.jsx)(n.code,{children:"cancelled-e2e-quick-test"})," and leaves an informative PR comment when the ",(0,t.jsx)(n.code,{children:"k8s-cluster-api-provider-e2e-quick"})," job is canceled"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"unlabel-on-update-e2e-quick-test"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["It is triggered by the PR update only when PR contains the ",(0,t.jsx)(n.code,{children:"successful-e2e-quick-test"})," label"]}),"\n",(0,t.jsx)(n.li,{children:"It ensures that any PR update invalidates a previous successful e2e test"}),"\n",(0,t.jsxs)(n.li,{children:["It removes ",(0,t.jsx)(n.code,{children:"successful-e2e-quick-test"})," label from the PR"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"periodic-daily"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"This pipeline runs jobs daily at 3AM"}),"\n",(0,t.jsxs)(n.li,{children:["It executes ",(0,t.jsx)(n.code,{children:"k8s-cluster-api-provider-e2e-conformance"})," job"]}),"\n",(0,t.jsxs)(n.li,{children:["The job overrides the ",(0,t.jsx)(n.code,{children:"git_reference"})," variable to ensure that the e2e conformance testing is executed on a specific tag"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"jobs",children:"Jobs"}),"\n",(0,t.jsx)(n.p,{children:"This section describes Zuul jobs defined within the k8s-cluster-api-provider project and linked in the above pipelines."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"k8s-cluster-api-provider-e2e-conformance"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"It runs a sonobuoy conformance test against Kubernetes cluster spawned by k8s-cluster-api-provider scripts"}),"\n",(0,t.jsxs)(n.li,{children:["This job is a child job of ",(0,t.jsx)(n.code,{children:"openstack-access-base"})," that ensures OpenStack credentials\navailability in Zuul worker node. Parent job also defines a Zuul semaphore ",(0,t.jsx)(n.code,{children:"semaphore-openstack-access"}),",\nthat ensures that a maximum of three ",(0,t.jsx)(n.code,{children:"openstack-access-base"})," jobs (or their children) can run at a time"]}),"\n",(0,t.jsxs)(n.li,{children:["See a high level ",(0,t.jsx)(n.code,{children:"k8s-cluster-api-provider-e2e-conformance"})," job steps:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Pre-run playbook ",(0,t.jsx)(n.code,{children:"dependencies.yaml"})," installs project prerequisites, e.g. opentofu, yq, etc."]}),"\n",(0,t.jsxs)(n.li,{children:["Main playbook ",(0,t.jsx)(n.code,{children:"e2e.yaml"})," spawns a k8s cluster, runs sonobuoy conformance test, and cleans created infrastructure, all by k8s-cluster-api-provider scripts"]}),"\n",(0,t.jsxs)(n.li,{children:["Cleanup-run playbook ",(0,t.jsx)(n.code,{children:"cleanup.yaml"})," runs ",(0,t.jsx)(n.code,{children:"ospurge"}),", cleanup created application credentials and keypair to ensure that multiple e2e runs do not interfere"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"k8s-cluster-api-provider-e2e-quick"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"It runs a sonobuoy quick test against Kubernetes cluster spawned by k8s-cluster-api-provider scripts"}),"\n",(0,t.jsxs)(n.li,{children:["This job is a child job of ",(0,t.jsx)(n.code,{children:"openstack-access-base"})," that ensures OpenStack credentials\navailability in Zuul worker node. Parent job also defines a Zuul semaphore ",(0,t.jsx)(n.code,{children:"semaphore-openstack-access"}),",\nthat ensures that a maximum of three ",(0,t.jsx)(n.code,{children:"openstack-access-base"})," jobs (or their children) can run at a time"]}),"\n",(0,t.jsxs)(n.li,{children:["See a high level ",(0,t.jsx)(n.code,{children:"k8s-cluster-api-provider-e2e-quick"})," job steps:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Pre-run playbook ",(0,t.jsx)(n.code,{children:"dependencies.yaml"})," installs project prerequisites, e.g. opentofu, yq, etc."]}),"\n",(0,t.jsxs)(n.li,{children:["Main playbook ",(0,t.jsx)(n.code,{children:"e2e.yaml"})," spawns a k8s cluster, runs sonobuoy quick test, and cleans created infrastructure, all by k8s-cluster-api-provider scripts"]}),"\n",(0,t.jsxs)(n.li,{children:["Cleanup-run playbook ",(0,t.jsx)(n.code,{children:"cleanup.yaml"})," runs ",(0,t.jsx)(n.code,{children:"ospurge"}),", cleanup created application credentials and keypair to ensure that multiple e2e runs do not interfere"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"secrets",children:"Secrets"}),"\n",(0,t.jsxs)(n.p,{children:["The parent job ",(0,t.jsx)(n.code,{children:"openstack-access-base"}),", from which e2e jobs inherit, defines secret variable ",(0,t.jsx)(n.code,{children:"openstack-application-credential"}),".\nThis secret is stored directly in the ",(0,t.jsx)(n.a,{href:"https://github.com/SovereignCloudStack/zuul-config/blob/main/zuul.d/secrets.yaml",children:"SCS/zuul-config repository"})," in an encrypted form.\nIt contains OpenStack application credentials to access the OpenStack project dedicated for CI testing."]}),"\n",(0,t.jsxs)(n.p,{children:["This secret is encrypted by the SCS/zuul-config repository RSA key that has been generated by SCS Zuul instance.\nSo only SCS Zuul instance is able to decrypt it (read the ",(0,t.jsx)(n.a,{href:"https://zuul-ci.org/docs/zuul/latest/project-config.html#encryption",children:"docs"}),")."]}),"\n",(0,t.jsx)(n.p,{children:"If you want to re-generate the mentioned secret or add another one using SCS/zuul-config repository RSA key, follow the below instructions:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Install zuul-client"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pip install zuul-client\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:'Encrypt "super-secret" string by the SCS/zuul-config repository public key from SCS Zuul'}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'echo -n "super-secret" | \\\n  zuul-client --zuul-url https://zuul.scs.community encrypt \\\n  --tenant SCS \\\n  --project github.com/SovereignCloudStack/zuul-config\n'})}),"\n",(0,t.jsx)(n.h3,{id:"job-customization",children:"Job customization"}),"\n",(0,t.jsxs)(n.p,{children:["In some cases you may want to change your ",(0,t.jsx)(n.code,{children:"environment.tfvars"})," file before running the e2e test without changing\nthe ",(0,t.jsx)(n.code,{children:"environment.tfvars"})," file in the repository. For example, you may want to change the ",(0,t.jsx)(n.code,{children:"image"})," variable to test a different\nsystem image without altering the default image used by the project."]}),"\n",(0,t.jsx)(n.p,{children:"To do so, you can in the body of the PR add the following text:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:'    ```ZUUL_CONFIG\n    image = "Ubuntu 20.04"\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"\n### FAQ\n\n#### How do developers/reviewers should proceed if they want to CI test this project?\n\nA developer initiates a PR as usual. If a reviewer deems that the PR requires e2e testing,\nthey can apply a specific label to the PR.\nCurrently, the following labels could be applied:\n\n- `e2e-test` (for comprehensive e2e testing, including k8s cluster creation, execution of sonobuoy conformance tests, and cluster deletion)\n- `e2e-quick-test` (for expedited e2e testing, involving k8s cluster creation, quick sonobuoy tests, and cluster deletion)\n\nAfter the e2e test has completed, the reviewer can examine the test results and respond\naccordingly, such as approving the PR if everything appears to be in order or requesting changes.\nSonobuoy test results, along with a link to the e2e logs, are conveyed back to the PR via a comment.\nAdditionally, the PR is labeled appropriately based on the overall e2e test result, using labels like\n`successful-e2e-test`, `successful-e2e-quick-test`, `failed-e2e-test`, or `failed-e2e-quick-test`.\n\n#### Why do we use PR `label` as an e2e pipeline trigger instead of e.g. PR `comment`?\n\nWe consider PR labels to be a more secure pipeline trigger compared to, for example, PR comments.\nPR labels can only be applied by developers with [triage](https://docs.github.com/en/organizations/managing-user-access-to-your-organizations-repositories/managing-repository-roles/repository-roles-for-an-organization#permissions-for-each-role) repository access or higher.\nIn contrast, PR comments can be added by anyone with a GitHub account.\n\nMembers of the SCS GitHub organization are automatically granted 'write' access to SCS repositories.\nConsequently, the PR label mechanism ensures that only SCS organization members can trigger e2e pipelines.\n\n#### How do we ensure that any PR update invalidates a previous successful e2e test?\n\nIn fact, two mechanisms ensure the invalidation of a previously successful test when a PR is updated.\n\nFirstly, the pipelines `unlabel-on-update-<e2e-test-name>` remove the `successful-<e2e-test-name>` label\nfrom the PR when it's updated after a successful e2e test has finished.\nIf an e2e test is in progress and the PR is updated, the currently running e2e test is\ncanceled, the `successful-<e2e-test-name>` label is removed (if it exists), and the\n`cancelled-<e2e-test-name>` label is applied along with an informative PR comment to\ninform the reviewer about the situation.\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var t=s(96540);const i={},r=t.createContext(i);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);