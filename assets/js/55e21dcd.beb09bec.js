"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1810],{60941:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>g,frontMatter:()=>a,metadata:()=>r,toc:()=>l});var o=t(74848),s=t(28453);const a={},i="Traces",r={id:"operating-scs/components/monitoring/docs/tracing",title:"Traces",description:"This page contains a guide on how to enable traces in Thanos. Traces are not enabled by default.",source:"@site/docs/04-operating-scs/components/monitoring/docs/tracing.md",sourceDirName:"04-operating-scs/components/monitoring/docs",slug:"/operating-scs/components/monitoring/docs/tracing",permalink:"/docs/operating-scs/components/monitoring/docs/tracing",draft:!1,unlisted:!1,editUrl:"https://github.com/SovereignCloudStack/docs/tree/main/docs/04-operating-scs/components/monitoring/docs/tracing.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"OAUTH",permalink:"/docs/operating-scs/components/monitoring/docs/oauth"},next:{title:"Tuning",permalink:"/docs/operating-scs/components/monitoring/docs/tuning"}},c={},l=[{value:"Example",id:"example",level:2},{value:"Usage",id:"usage",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",img:"img",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"traces",children:"Traces"}),"\n",(0,o.jsx)(n.p,{children:"This page contains a guide on how to enable traces in Thanos. Traces are not enabled by default."}),"\n",(0,o.jsxs)(n.p,{children:["Thanos supports different tracing backends that implements ",(0,o.jsx)(n.code,{children:"opentracing.Tracer"})," interface.\nAll clients could be configured by ",(0,o.jsx)(n.code,{children:"--tracing.config-file"})," parameter to reference to the configuration file or by ",(0,o.jsx)(n.code,{children:"--tracing.config"}),"\nparameter to put yaml config directly. Recommended way is to pass configuration directly as it gives an explicit static view of\nconfiguration for each component, and it also saves you the fuss of creating and managing additional files."]}),"\n",(0,o.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,o.jsx)(n.p,{children:"Here is the example of the configuration how to enable jaeger in Thanos. This configuration can be applied for multiple components e.g. query-frontend, query or thanos-sidecar."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'thanos:\n  queryFrontend:\n      extraFlags:\n      - |-\n        --tracing.config="config":\n          "sampler_param": 2\n          "sampler_type": "ratelimiting"\n          "service_name": "thanos-query-frontend"\n          "agent_host": "jaeger-agent.<namespace>.svc"\n          "agent_port": 5775\n        "type": "JAEGER"\n'})}),"\n",(0,o.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,o.jsxs)(n.p,{children:["Once tracing is enabled, Thanos will generate traces for all gRPC and HTTP APIs thanks to generic \u201cmiddlewares\u201d.\nSome more interesting to observe APIs like query or query_range have more low-level spans with focused metadata showing\nlatency for important functionalities. For example, Jaeger view of  query_range HTTP API call might look as follows:\n",(0,o.jsx)(n.img,{alt:"Jaeger-example",src:t(62122).A+"",width:"1843",height:"903"})]})]})}function g(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},62122:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/jaeger-91a4b48820447709f604d72c396cacf8.png"},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>r});var o=t(96540);const s={},a=o.createContext(s);function i(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);