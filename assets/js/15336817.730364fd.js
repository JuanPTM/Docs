"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5533],{31570:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>d});var r=t(74848),o=t(28453);const s={},c="Quickstart",i={id:"container/components/k8s-cluster-api-provider/doc/quickstart",title:"Quickstart",description:"This guide shows you how to get working Kubernetes clusters on a SCS cloud",source:"@site/docs/03-container/components/k8s-cluster-api-provider/doc/quickstart.md",sourceDirName:"03-container/components/k8s-cluster-api-provider/doc",slug:"/container/components/k8s-cluster-api-provider/doc/quickstart",permalink:"/docs/container/components/k8s-cluster-api-provider/doc/quickstart",draft:!1,unlisted:!1,editUrl:"https://github.com/SovereignCloudStack/docs/tree/main/docs/03-container/components/k8s-cluster-api-provider/doc/quickstart.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Requirements",permalink:"/docs/container/components/k8s-cluster-api-provider/doc/requirements"},next:{title:"Makefile reference",permalink:"/docs/container/components/k8s-cluster-api-provider/doc/make-reference"}},a={},d=[{value:"Requirements",id:"requirements",level:2},{value:"Prepare the environment",id:"prepare-the-environment",level:2},{value:"Create a test cluster",id:"create-a-test-cluster",level:2},{value:"Teardown",id:"teardown",level:2},{value:"Beyond quickstart",id:"beyond-quickstart",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"quickstart",children:"Quickstart"}),"\n",(0,r.jsxs)(n.p,{children:["This guide shows you how to get working Kubernetes clusters on a SCS cloud\nvia ",(0,r.jsx)(n.a,{href:"https://cluster-api.sigs.k8s.io/",children:"cluster-api"}),"(CAPI)."]}),"\n",(0,r.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"make"}),"\n",(0,r.jsx)(n.li,{children:"kubectl"}),"\n",(0,r.jsx)(n.li,{children:"opentofu"}),"\n",(0,r.jsx)(n.li,{children:"yq"}),"\n",(0,r.jsx)(n.li,{children:"python3-openstackclient, python3-octaviaclient"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"prepare-the-environment",children:"Prepare the environment"}),"\n",(0,r.jsx)(n.p,{children:"You need access to an OpenStack project.\nCopy the default environment and adjust the options according to your cloud."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cp terraform/environments/environment-{default,<YOURCLOUD>}.tfvars\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Edit ",(0,r.jsx)(n.code,{children:"terraform/environments/environment-<YOURCLOUD>.tfvars"})," with your favourite text editor. Every option without a\ndefault value must be set.\nAdd\na ",(0,r.jsx)(n.a,{href:"https://docs.openstack.org/python-openstackclient/latest/configuration/index.html#configuration-files",children:"clouds.yaml"}),"\ninside the ",(0,r.jsx)(n.code,{children:"terraform"})," dir, in ",(0,r.jsx)(n.code,{children:"~/.config/openstack"})," or ",(0,r.jsx)(n.code,{children:"/etc/openstack"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["It is recommended to set the name of the cloud in the ",(0,r.jsx)(n.code,{children:"clouds.yml"})," to the same value as the ",(0,r.jsx)(n.code,{children:"cloud_provider"})," in\nthe ",(0,r.jsx)(n.code,{children:"environment-<YOURCLOUD>.tfvars"}),", then you only have to specify the ",(0,r.jsx)(n.code,{children:"ENVIRONMENT"})," or ",(0,r.jsx)(n.code,{children:"OS_CLOUD"})," variable."]}),"\n",(0,r.jsx)(n.h2,{id:"create-a-test-cluster",children:"Create a test cluster"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Set the ENVIRONMENT to the name specified in the name of the file\n# `cloud_provider` option has to be set in the environment file\n# to the name of the cloud in the clouds.yaml\nexport ENVIRONMENT=<YOURCLOUD>\n\n# Create your environment. This includes a management node as virtual machine\n# in your OpenStack environment as well as a Kubernetes testcluster.\nmake create\n\n# Get the kubeconfig of the testcluster\nmake get-kubeconfig\n\n# Interact with the testcluster\nkubectl --kubeconfig testcluster.yaml.<YOURCLOUD> get nodes\n"})}),"\n",(0,r.jsx)(n.h2,{id:"teardown",children:"Teardown"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"make clean\n"})}),"\n",(0,r.jsxs)(n.p,{children:["If ",(0,r.jsx)(n.code,{children:"make clean"})," fails to clean up completely, you can also use the ",(0,r.jsx)(n.code,{children:"fullclean"})," target.\nReview the ",(0,r.jsx)(n.a,{href:"/docs/container/components/k8s-cluster-api-provider/doc/make-reference#teardown",children:"Teardown section of the Makefile reference"})," document for more details."]}),"\n",(0,r.jsx)(n.h2,{id:"beyond-quickstart",children:"Beyond quickstart"}),"\n",(0,r.jsxs)(n.p,{children:["This guide assumes you just create one test cluster directly when creating the\nmanagement server.\nIn a production setting, you would not use this test cluster but create clusters\nvia the management server. You can read more about this in the ",(0,r.jsx)(n.a,{href:"/docs/container/components/k8s-cluster-api-provider/doc/usage/",children:"usage guide"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>i});var r=t(96540);const o={},s=r.createContext(o);function c(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);