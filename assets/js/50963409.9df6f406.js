"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8169],{18131:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>a});var s=n(74848),o=n(28453);const r={},i="Testing",c={id:"container/components/k8s-cluster-api-provider/doc/usage/testing",title:"Testing",description:"To test the created k8s cluster, there are several tools available.",source:"@site/docs/03-container/components/k8s-cluster-api-provider/doc/usage/testing.md",sourceDirName:"03-container/components/k8s-cluster-api-provider/doc/usage",slug:"/container/components/k8s-cluster-api-provider/doc/usage/testing",permalink:"/docs/container/components/k8s-cluster-api-provider/doc/usage/testing",draft:!1,unlisted:!1,editUrl:"https://github.com/SovereignCloudStack/docs/tree/main/docs/03-container/components/k8s-cluster-api-provider/doc/usage/testing.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Multi-AZ and multi-cloud environments",permalink:"/docs/container/components/k8s-cluster-api-provider/doc/usage/multi-az-and-multi-cloud-environments"},next:{title:"Container registry configuration",permalink:"/docs/container/components/k8s-cluster-api-provider/doc/usage/containter-registry-configuration"}},l={},a=[];function d(e){const t={a:"a",code:"code",h1:"h1",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"testing",children:"Testing"}),"\n",(0,s.jsxs)(t.p,{children:["To test the created k8s cluster, there are several tools available.\nApply all commands to the testcluster context (by passing the appropriate\n",(0,s.jsx)(t.code,{children:"--context"})," setting to ",(0,s.jsx)(t.code,{children:"kubectl"})," or by using the right ",(0,s.jsx)(t.code,{children:"KUBECONFIG"}),"\nfile)."]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Looking at all pods (",(0,s.jsx)(t.code,{children:"kubectl get pods -A"}),") to see that they all come\nup (and don't suffer excessive restarts) is a good first check.\nLook at the pod logs to investigate any failures."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["You can create a very simple deployment with the provided ",(0,s.jsx)(t.code,{children:"kuard.yaml"}),', which is\nan example taken from the O\'Reilly book from B. Burns, J. Beda, K. Hightower:\n"Kubernetes Up & Running" enhanced to also use a persistent volume.']}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["You can deploy ",(0,s.jsx)(t.a,{href:"https://github.com/GoogleCloudPlatform/microservices-demo",children:"Google's demo microservice application"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"sonobuoy"})," runs a subset of the k8s tests, providing a simple way to\nfilter the >5000 existing test cases to only run the CNCF conformance\ntests or to restrict testing to non-disruptive tests. The ",(0,s.jsx)(t.code,{children:"sonobuoy.sh"})," wrapper\nhelps with calling it. There are also ",(0,s.jsx)(t.code,{children:"Makefile"})," targets ",(0,s.jsx)(t.code,{children:"check-*"})," that\ncall various ",(0,s.jsx)(t.a,{href:"https://sonobuoy.io",children:"sonobuoy"})," test sets.\nThis is how we call sonobuoy for our CI tests."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["You can use ",(0,s.jsx)(t.code,{children:"cilium connectivity test"})," to check whether your cilium\nCNI is working properly. You might need to enable hubble to get\na fully successful result."]}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var s=n(96540);const o={},r=s.createContext(o);function i(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);