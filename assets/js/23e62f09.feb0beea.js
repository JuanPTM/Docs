"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8966],{9324:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var s=n(74848),i=n(28453);const r={},d="scs-0300: Requirements for SSO identity federation",a={id:"iam/scs-0300",title:"scs-0300: Requirements for SSO identity federation",description:"The SCS-0300 standard outlines requirements for Single Sign-On (SSO) identity federation within the Sovereign",source:"@site/standards/iam/scs-0300.md",sourceDirName:"iam",slug:"/iam/scs-0300",permalink:"/standards/iam/scs-0300",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"standards",previous:{title:"IAM Standards",permalink:"/standards/iam/"},next:{title:"Requirements for SSO identity federation",permalink:"/standards/scs-0300-v1-requirements-for-sso-identity-federation"}},o={},c=[];function l(e){const t={a:"a",h1:"h1",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"scs-0300-requirements-for-sso-identity-federation",children:"scs-0300: Requirements for SSO identity federation"}),"\n",(0,s.jsx)(t.p,{children:"The SCS-0300 standard outlines requirements for Single Sign-On (SSO) identity federation within the Sovereign\nCloud Stack (SCS). It addresses the need for customers to access SCS services using credentials stored and managed\nexternally, facilitating user onboarding and reducing the need for additional dedicated SCS accounts. The standard\nfocuses on delegating authentication to external identity providers and mapping users to roles within SCS for\nauthorization, while also considering the use of machine identities. Keycloak is the current choice as an Identity\nProvider (IdP) for its support of OAuth 2.0 grants and its integration with OpenStack and kolla-ansible."}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Version"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"State"}),(0,s.jsx)(t.th,{children:"stabilized"}),(0,s.jsx)(t.th,{children:"deprecated"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/standards/scs-0300-v1-requirements-for-sso-identity-federation",children:"scs-0300-v1"})}),(0,s.jsx)(t.td,{children:"Decision Record"}),(0,s.jsx)(t.td,{children:"Stable"}),(0,s.jsx)(t.td,{children:"2023-06-21"}),(0,s.jsx)(t.td,{children:"-"})]})})]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>a});var s=n(96540);const i={},r=s.createContext(i);function d(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);